Index: statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/Ergebnisse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.student.dhbwvs.statisticsCalculatorBackend;\r\n\r\nimport java.util.Map;\r\n\r\npublic class Ergebnisse {\r\n\r\n    private Map<Double, Integer> haeufigkeitsverteilung;\r\n    private double[] expliziteStichprobe;\r\n    private double[] quantile;\r\n    private double modalwert;\r\n    private double mittelwert;\r\n    private double median;\r\n    private double varianz;\r\n    private double standardabweichung;\r\n    private double mittlereAbweichungZuZ;\r\n    private double giniKoeffizient;\r\n\r\n\r\n    public Ergebnisse(Map<Double, Integer> haeufigkeitsverteilung, double[] expliziteStichprobe, double[] quantile,\r\n                      double modalwert, double mittelwert, double median, double varianz,\r\n                      double standardabweichung, double mittlereAbweichungZuZ, double giniKoeffizient) {\r\n\r\n        this.haeufigkeitsverteilung = haeufigkeitsverteilung;\r\n        this.expliziteStichprobe = expliziteStichprobe;\r\n        this.quantile = quantile;\r\n        this.modalwert = modalwert;\r\n        this.mittelwert = mittelwert;\r\n        this.median = median;\r\n        this.varianz = varianz;\r\n        this.standardabweichung = standardabweichung;\r\n        this.mittlereAbweichungZuZ = mittlereAbweichungZuZ;\r\n        this.giniKoeffizient = giniKoeffizient;\r\n    }\r\n\r\n    public Map<Double, Integer> getHaeufigkeitsverteilung() {\r\n        return haeufigkeitsverteilung;\r\n    }\r\n\r\n    public void setHaeufigkeitsverteilung(Map<Double, Integer> haeufigkeitsverteilung) {\r\n        this.haeufigkeitsverteilung = haeufigkeitsverteilung;\r\n    }\r\n\r\n    public double[] getExpliziteStichprobe() {\r\n        return expliziteStichprobe;\r\n    }\r\n\r\n    public void setExpliziteStichprobe(double[] expliziteStichprobe) {\r\n        this.expliziteStichprobe = expliziteStichprobe;\r\n    }\r\n\r\n    public double[] getQuantile() {\r\n        return quantile;\r\n    }\r\n\r\n    public void setQuantile(double[] quantile) {\r\n        this.quantile = quantile;\r\n    }\r\n\r\n    public double getModalwert() {\r\n        return modalwert;\r\n    }\r\n\r\n    public void setModalwert(double modalwert) {\r\n        this.modalwert = modalwert;\r\n    }\r\n\r\n    public double getMittelwert() {\r\n        return mittelwert;\r\n    }\r\n\r\n    public void setMittelwert(double mittelwert) {\r\n        this.mittelwert = mittelwert;\r\n    }\r\n\r\n    public double getMedian() {\r\n        return median;\r\n    }\r\n\r\n    public void setMedian(double median) {\r\n        this.median = median;\r\n    }\r\n\r\n    public double getVarianz() {\r\n        return varianz;\r\n    }\r\n\r\n    public void setVarianz(double varianz) {\r\n        this.varianz = varianz;\r\n    }\r\n\r\n    public double getStandardabweichung() {\r\n        return standardabweichung;\r\n    }\r\n\r\n    public void setStandardabweichung(double standardabweichung) {\r\n        this.standardabweichung = standardabweichung;\r\n    }\r\n\r\n    public double getMittlereAbweichungZuZ() {\r\n        return mittlereAbweichungZuZ;\r\n    }\r\n\r\n    public void setMittlereAbweichungZuZ(double mittlereAbweichungZuZ) {\r\n        this.mittlereAbweichungZuZ = mittlereAbweichungZuZ;\r\n    }\r\n\r\n    public double getGiniKoeffizient() {\r\n        return giniKoeffizient;\r\n    }\r\n\r\n    public void setGiniKoeffizient(double giniKoeffizient) {\r\n        this.giniKoeffizient = giniKoeffizient;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/Ergebnisse.java b/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/Ergebnisse.java
--- a/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/Ergebnisse.java	(revision 47b03b9d72800f8cc9d3cb87d0b67e7f2b695113)
+++ b/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/Ergebnisse.java	(date 1611318892699)
@@ -1,7 +1,15 @@
 package de.student.dhbwvs.statisticsCalculatorBackend;
 
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.Setter;
+
 import java.util.Map;
 
+@Getter
+@Setter
+@AllArgsConstructor
 public class Ergebnisse {
 
     private Map<Double, Integer> haeufigkeitsverteilung;
@@ -15,101 +23,4 @@
     private double mittlereAbweichungZuZ;
     private double giniKoeffizient;
 
-
-    public Ergebnisse(Map<Double, Integer> haeufigkeitsverteilung, double[] expliziteStichprobe, double[] quantile,
-                      double modalwert, double mittelwert, double median, double varianz,
-                      double standardabweichung, double mittlereAbweichungZuZ, double giniKoeffizient) {
-
-        this.haeufigkeitsverteilung = haeufigkeitsverteilung;
-        this.expliziteStichprobe = expliziteStichprobe;
-        this.quantile = quantile;
-        this.modalwert = modalwert;
-        this.mittelwert = mittelwert;
-        this.median = median;
-        this.varianz = varianz;
-        this.standardabweichung = standardabweichung;
-        this.mittlereAbweichungZuZ = mittlereAbweichungZuZ;
-        this.giniKoeffizient = giniKoeffizient;
-    }
-
-    public Map<Double, Integer> getHaeufigkeitsverteilung() {
-        return haeufigkeitsverteilung;
-    }
-
-    public void setHaeufigkeitsverteilung(Map<Double, Integer> haeufigkeitsverteilung) {
-        this.haeufigkeitsverteilung = haeufigkeitsverteilung;
-    }
-
-    public double[] getExpliziteStichprobe() {
-        return expliziteStichprobe;
-    }
-
-    public void setExpliziteStichprobe(double[] expliziteStichprobe) {
-        this.expliziteStichprobe = expliziteStichprobe;
-    }
-
-    public double[] getQuantile() {
-        return quantile;
-    }
-
-    public void setQuantile(double[] quantile) {
-        this.quantile = quantile;
-    }
-
-    public double getModalwert() {
-        return modalwert;
-    }
-
-    public void setModalwert(double modalwert) {
-        this.modalwert = modalwert;
-    }
-
-    public double getMittelwert() {
-        return mittelwert;
-    }
-
-    public void setMittelwert(double mittelwert) {
-        this.mittelwert = mittelwert;
-    }
-
-    public double getMedian() {
-        return median;
-    }
-
-    public void setMedian(double median) {
-        this.median = median;
-    }
-
-    public double getVarianz() {
-        return varianz;
-    }
-
-    public void setVarianz(double varianz) {
-        this.varianz = varianz;
-    }
-
-    public double getStandardabweichung() {
-        return standardabweichung;
-    }
-
-    public void setStandardabweichung(double standardabweichung) {
-        this.standardabweichung = standardabweichung;
-    }
-
-    public double getMittlereAbweichungZuZ() {
-        return mittlereAbweichungZuZ;
-    }
-
-    public void setMittlereAbweichungZuZ(double mittlereAbweichungZuZ) {
-        this.mittlereAbweichungZuZ = mittlereAbweichungZuZ;
-    }
-
-    public double getGiniKoeffizient() {
-        return giniKoeffizient;
-    }
-
-    public void setGiniKoeffizient(double giniKoeffizient) {
-        this.giniKoeffizient = giniKoeffizient;
-    }
-
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"443c654d-daa9-4071-a33a-a7d363de4aae\" name=\"Default Changelist\" comment=\"Implementierung der Umwandlung von absoluter Häufigkeit nach Stichprobe&#10;Beide Umwandlungen geben jetzt ein nach Größe aufsteigendes Ergebnis zurück&#10;Implementierung einiger Tests\">\r\n      <change afterPath=\"$PROJECT_DIR$/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/Ergebnisse.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeInsightWorkspaceSettings\">\r\n    <option name=\"optimizeImportsOnTheFly\" value=\"true\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"backend_tests\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"SET_USER_NAME_GLOBALLY\" value=\"false\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"GithubProjectSettings\">\r\n    <option name=\"CREATE_PULL_REQUEST_DEFAULT_BRANCH\" value=\"main\" />\r\n    <option name=\"CREATE_PULL_REQUEST_DEFAULT_REPO_USER\" value=\"JulianGommlich\" />\r\n    <option name=\"CREATE_PULL_REQUEST_DEFAULT_REPO_NAME\" value=\"StatisticsCalculator\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1n4jUXluegyPotyifcz74GYZ0WL\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ChangesTree.GroupingKeys\" value=\"module\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.StatisticsCalculatorBackendApplicationTests.testcalcMedian\">\r\n    <configuration name=\"StatisticsCalculatorBackendApplicationTests.testcalcModal\" type=\"AndroidJUnit\" factoryName=\"Android JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"statisticsCalculatorBackend\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"de.student.dhbwvs.statisticsCalculatorBackend.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"de.student.dhbwvs.statisticsCalculatorBackend\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"de.student.dhbwvs.statisticsCalculatorBackend.StatisticsCalculatorBackendApplicationTests\" />\r\n      <option name=\"METHOD_NAME\" value=\"testcalcModal\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$MODULE_DIR$\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"StatisticsCalculatorBackendApplicationTests\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"statisticsCalculatorBackend\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"de.student.dhbwvs.statisticsCalculatorBackend.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"de.student.dhbwvs.statisticsCalculatorBackend\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"de.student.dhbwvs.statisticsCalculatorBackend.StatisticsCalculatorBackendApplicationTests\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"StatisticsCalculatorBackendApplicationTests.testDistributionToSample\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"statisticsCalculatorBackend\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"de.student.dhbwvs.statisticsCalculatorBackend.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"de.student.dhbwvs.statisticsCalculatorBackend\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"de.student.dhbwvs.statisticsCalculatorBackend.StatisticsCalculatorBackendApplicationTests\" />\r\n      <option name=\"METHOD_NAME\" value=\"testDistributionToSample\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"StatisticsCalculatorBackendApplicationTests.testcalcMedian\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"statisticsCalculatorBackend\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"de.student.dhbwvs.statisticsCalculatorBackend.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"de.student.dhbwvs.statisticsCalculatorBackend\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"de.student.dhbwvs.statisticsCalculatorBackend.StatisticsCalculatorBackendApplicationTests\" />\r\n      <option name=\"METHOD_NAME\" value=\"testcalcMedian\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.StatisticsCalculatorBackendApplicationTests.testcalcMedian\" />\r\n        <item itemvalue=\"JUnit.StatisticsCalculatorBackendApplicationTests.testDistributionToSample\" />\r\n        <item itemvalue=\"JUnit.StatisticsCalculatorBackendApplicationTests\" />\r\n        <item itemvalue=\"Android JUnit.StatisticsCalculatorBackendApplicationTests.testcalcModal\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"443c654d-daa9-4071-a33a-a7d363de4aae\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1610656275322</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1610656275322</updated>\r\n      <workItem from=\"1610656277974\" duration=\"48000\" />\r\n      <workItem from=\"1610726675711\" duration=\"1345000\" />\r\n      <workItem from=\"1610885880117\" duration=\"1132000\" />\r\n      <workItem from=\"1610906779046\" duration=\"2263000\" />\r\n      <workItem from=\"1610909417941\" duration=\"1250000\" />\r\n      <workItem from=\"1610910874191\" duration=\"346000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Implementierung der Umwandlung von absoluter Häufigkeit nach Stichprobe&#10;Beide Umwandlungen geben jetzt ein nach Größe aufsteigendes Ergebnis zurück&#10;Implementierung einiger Tests\">\r\n      <created>1611151159525</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1611151159525</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"ergebnisklasse\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Erster Entwurf für die Berechnung des Medians\" />\r\n    <MESSAGE value=\"Implementierung der Umwandlung von absoluter Häufigkeit nach Stichprobe&#10;Beide Umwandlungen geben jetzt ein nach Größe aufsteigendes Ergebnis zurück&#10;Implementierung einiger Tests\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Implementierung der Umwandlung von absoluter Häufigkeit nach Stichprobe&#10;Beide Umwandlungen geben jetzt ein nach Größe aufsteigendes Ergebnis zurück&#10;Implementierung einiger Tests\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 47b03b9d72800f8cc9d3cb87d0b67e7f2b695113)
+++ b/.idea/workspace.xml	(date 1611320385377)
@@ -5,8 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="443c654d-daa9-4071-a33a-a7d363de4aae" name="Default Changelist" comment="Implementierung der Umwandlung von absoluter Häufigkeit nach Stichprobe&#10;Beide Umwandlungen geben jetzt ein nach Größe aufsteigendes Ergebnis zurück&#10;Implementierung einiger Tests">
-      <change afterPath="$PROJECT_DIR$/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/Ergebnisse.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/Ergebnisse.java" beforeDir="false" afterPath="$PROJECT_DIR$/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/Ergebnisse.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/StatisticsCalculatorBackendApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/StatisticsCalculatorBackendApplication.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -158,7 +159,14 @@
       <option name="project" value="LOCAL" />
       <updated>1611151159525</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="Ergebnisseklasse erstellt">
+      <created>1611251109277</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1611251109277</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -191,6 +199,7 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Erster Entwurf für die Berechnung des Medians" />
     <MESSAGE value="Implementierung der Umwandlung von absoluter Häufigkeit nach Stichprobe&#10;Beide Umwandlungen geben jetzt ein nach Größe aufsteigendes Ergebnis zurück&#10;Implementierung einiger Tests" />
-    <option name="LAST_COMMIT_MESSAGE" value="Implementierung der Umwandlung von absoluter Häufigkeit nach Stichprobe&#10;Beide Umwandlungen geben jetzt ein nach Größe aufsteigendes Ergebnis zurück&#10;Implementierung einiger Tests" />
+    <MESSAGE value="Ergebnisseklasse erstellt" />
+    <option name="LAST_COMMIT_MESSAGE" value="Ergebnisseklasse erstellt" />
   </component>
 </project>
\ No newline at end of file
Index: statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/StatisticsCalculatorBackendApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package de.student.dhbwvs.statisticsCalculatorBackend;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\nimport java.util.*;\r\nimport java.util.stream.Collectors;\r\n\r\n\r\n@SpringBootApplication\r\npublic class StatisticsCalculatorBackendApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(StatisticsCalculatorBackendApplication.class, args);\r\n\t}\r\n\r\n\r\n\t/**freqDistribution übernimmt die Stichprobe als double-Array und gibt eine sortierte Map zurück, mit den einzelnen Werten der Stichprobe\r\n\tals keys in Form double und ihrer jeweiligen Häufigkeit als values in der Form Integer**/\r\n\tpublic static Map<Double,Integer> freqDistribution(double[] stichprobe) {\r\n\t\tMap<Double, Integer> freqDist = new HashMap<>();\r\n\t\t//für jedes double im Array wird ein neuer key angelegt, falls noch nicht vorhanden, oder der value(die Anzahl) um eins erhöht:\r\n\t\tfor (double i : stichprobe) {\r\n\t\t\tif (freqDist.containsKey(i)){\r\n\t\t\t\tfreqDist.replace(i, freqDist.get(i) + 1);\r\n\t\t\t} else {\r\n\t\t\t\tfreqDist.put(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//Sortiervorgang aufsteigend\r\n\t\treturn freqDist.entrySet()\r\n\t\t\t\t.stream()\r\n\t\t\t\t.sorted(Map.Entry.<Double, Integer>comparingByKey())\r\n\t\t\t\t.collect(Collectors.toMap(\r\n\t\t\t\t\t\tMap.Entry::getKey,\r\n\t\t\t\t\t\tMap.Entry::getValue,\r\n\t\t\t\t\t\t(oldValue, newValue) -> oldValue, LinkedHashMap::new));\r\n\t}\r\n\r\n\t/**exp_sample übernimmt die Häufigkeitsverteilung als Map und gibt eine aufsteigend sortierte explizite Stichprobe als double-Array zurück**/\r\n\r\n\tpublic static double[] expSample(Map<Double,Integer> freqDist) {\r\n\r\n\t\tArrayList<Double> exp_sample = new ArrayList<>();\r\n\r\n\t\tfor (double i : freqDist.keySet()) {\r\n\t\t\tfor(int j = freqDist.get(i); j > 0; j--){\r\n\t\t\t\texp_sample.add(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tCollections.sort(exp_sample);\r\n\t\treturn exp_sample.stream().mapToDouble(d -> d).toArray();\r\n\t}\r\n\r\n\t/**calcModal übernimmt die Map aus freqDistribution, durchsucht diese nach dem höchsten value und gibt eine List mit allen keys zurück,\r\n\tdie den entsprechenden value haben**/\r\n\tpublic static List<Double> calcModal(Map<Double,Integer> freqDist) {\r\n\t\tList<Double> modal = new ArrayList<>();\r\n\t\t//durchsuche die map nach dem höchsten value, weise diesen der Variablen highest zu\r\n\t\tint highest = 0;\r\n\t\tfor (int i : freqDist.values()) {\r\n\t\t\thighest = i > highest ? i : highest; \r\n\t\t}\r\n\t\t//durchsuche die map nach jedem key, bei dem highest == value; füge diese keys der List hinzu\r\n\t\tfor (double j : freqDist.keySet()){\r\n\t\t\tif (highest == freqDist.get(j)){\r\n\t\t\t\tmodal.add(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn modal;\r\n\t}\r\n\t// calcMedian berechnet den Median eines Arrays\r\n    \tpublic static double calcMedian(double[] values){\r\n\t\t//Benenne einen Parameter für den späteren Median\r\n\t\tdouble median = 0;\r\n\t\t//Bestimme die Länge des Arrays\r\n\t\tint count = values.length;\r\n\t\t//Sortiere das Array aufsteigend\r\n\t\tArrays.sort(values);\r\n\t\t//Prüfe ob es sich um einen gerade oder um eine ungerade Array handelt.\r\n\t\tif(count % 2 == 0){\r\n\r\n\t    \t\t//Berechne den Median für einen gerade Array und speichere den Wert unter dem Parameter \"median\"\r\n\t    \t\tmedian = ((values[(count/2)-1] + values[((count/2))])/2);\r\n\t\t} else {\r\n\t    \t\t//Berechne den Median für einen ungerade Array und speichere den Wert unter dem Parameter \"median\"\r\n\t    \t\tmedian = values[((count+1)/2)-1];\r\n\r\n\t\t}\r\n\t\t//Gebe den Median zurück\r\n\t\treturn median;\r\n    \t}\r\n\r\n\t\r\n\t// Function takes an array as input\r\n    \tpublic static double calcAverage(double[] values) {\r\n\t\t/** \r\n\t\t* Berechnung des Durchschnitts eines Arrays\r\n\t\t* Input: Array mit double-Werten\r\n\t\t* Return: Durchschnitt als double-Wert\r\n\t\t**/\r\n\t\t\r\n        \tdouble sum = 0;\r\n\r\n        \t// Alle Elemente des Arrays in der Variable sum summieren\r\n        \tfor(int i=0; i<values.length; i++ ) {\r\n            \t\tsum += values[i];\r\n        \t}\r\n\r\n        \t// Der Durchschnitt ist die Summe geteilt durch die Anzahl an Werten\r\n        \tdouble average = sum / values.length;\r\n\r\n        \treturn average;\r\n    \t}\r\n\t\r\n\t\r\n\tpublic static double calcVariance(double[] values) {\r\n        \t/** Varianz berechnen\r\n         \t* Input: array mit double Werten\r\n         \t* Return: Die berechnete Varianz als double\r\n         \t**/\r\n\r\n        \t// Den Durchschnitt berechnen lassen\r\n        \tdouble average = calcAverage(values);\r\n\r\n        \t// Variable Varianz deklarieren\r\n        \tdouble variance = 0;\r\n\r\n        \tfor (int i = 0; i < values.length; i++) {\r\n            \t\t// Von jedem Wert aus dem Array values muss der Durchschnitt des Array abgezogen werden\r\n            \t\t// das Ergebnis wird dann mit 2 potenziert\r\n            \t\tvariance += Math.pow(values[i] - average, 2);\r\n        \t}\r\n\r\n        \t// Der return-Wert ist die Varianz\r\n        \tvariance /= values.length;\r\n\t\t\r\n        \treturn variance;\r\n    \t}\r\n\t\r\n\t\r\n\tpublic static double calcStandardDeviation(double[] values) {\r\n        \t/** Standardabweichung berechnen\r\n         \t* Input: array mit double Werten\r\n         \t* Return: Die berechnete Standardabweichung als double\r\n         \t**/\r\n\r\n        \t// Die Varianz berechnen lassen\r\n        \tdouble variance = calcVariance(values);\r\n\r\n        \t// Die Standardabweichung ist die Quadratwurzel der Varianz\r\n        \tdouble stdDev =Math.sqrt(variance);\r\n\r\n        \treturn stdDev;\r\n    \t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/StatisticsCalculatorBackendApplication.java b/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/StatisticsCalculatorBackendApplication.java
--- a/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/StatisticsCalculatorBackendApplication.java	(revision 47b03b9d72800f8cc9d3cb87d0b67e7f2b695113)
+++ b/statisticsCalculatorBackend/src/main/java/de/student/dhbwvs/statisticsCalculatorBackend/StatisticsCalculatorBackendApplication.java	(date 1611320384908)
@@ -57,9 +57,9 @@
 	public static List<Double> calcModal(Map<Double,Integer> freqDist) {
 		List<Double> modal = new ArrayList<>();
 		//durchsuche die map nach dem höchsten value, weise diesen der Variablen highest zu
-		int highest = 0;
-		for (int i : freqDist.values()) {
-			highest = i > highest ? i : highest; 
+		int highestValue = 0;
+		for (Map.Entry<Double, Integer> entry : freqDist.entrySet()) {
+			if(entry.getValue() > highestValue)
 		}
 		//durchsuche die map nach jedem key, bei dem highest == value; füge diese keys der List hinzu
 		for (double j : freqDist.keySet()){
